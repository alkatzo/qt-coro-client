/**
 * People API
 * An API that returns a list of people based on a provided date-time.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "ER__people_get_200_response_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "ER_Helpers.h"

namespace er {

ER__people_get_200_response_inner::ER__people_get_200_response_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

ER__people_get_200_response_inner::ER__people_get_200_response_inner() {
    this->initializeModel();
}

ER__people_get_200_response_inner::~ER__people_get_200_response_inner() {}

void ER__people_get_200_response_inner::initializeModel() {

    m_first_name_isSet = false;
    m_first_name_isValid = false;

    m_last_name_isSet = false;
    m_last_name_isValid = false;

    m_date_of_birth_isSet = false;
    m_date_of_birth_isValid = false;
}

void ER__people_get_200_response_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void ER__people_get_200_response_inner::fromJsonObject(QJsonObject json) {

    m_first_name_isValid = ::er::fromJsonValue(m_first_name, json[QString("firstName")]);
    m_first_name_isSet = !json[QString("firstName")].isNull() && m_first_name_isValid;

    m_last_name_isValid = ::er::fromJsonValue(m_last_name, json[QString("lastName")]);
    m_last_name_isSet = !json[QString("lastName")].isNull() && m_last_name_isValid;

    m_date_of_birth_isValid = ::er::fromJsonValue(m_date_of_birth, json[QString("dateOfBirth")]);
    m_date_of_birth_isSet = !json[QString("dateOfBirth")].isNull() && m_date_of_birth_isValid;
}

QString ER__people_get_200_response_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject ER__people_get_200_response_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_first_name_isSet) {
        obj.insert(QString("firstName"), ::er::toJsonValue(m_first_name));
    }
    if (m_last_name_isSet) {
        obj.insert(QString("lastName"), ::er::toJsonValue(m_last_name));
    }
    if (m_date_of_birth_isSet) {
        obj.insert(QString("dateOfBirth"), ::er::toJsonValue(m_date_of_birth));
    }
    return obj;
}

QString ER__people_get_200_response_inner::getFirstName() const {
    return m_first_name;
}
void ER__people_get_200_response_inner::setFirstName(const QString &first_name) {
    m_first_name = first_name;
    m_first_name_isSet = true;
}

bool ER__people_get_200_response_inner::is_first_name_Set() const{
    return m_first_name_isSet;
}

bool ER__people_get_200_response_inner::is_first_name_Valid() const{
    return m_first_name_isValid;
}

QString ER__people_get_200_response_inner::getLastName() const {
    return m_last_name;
}
void ER__people_get_200_response_inner::setLastName(const QString &last_name) {
    m_last_name = last_name;
    m_last_name_isSet = true;
}

bool ER__people_get_200_response_inner::is_last_name_Set() const{
    return m_last_name_isSet;
}

bool ER__people_get_200_response_inner::is_last_name_Valid() const{
    return m_last_name_isValid;
}

QDate ER__people_get_200_response_inner::getDateOfBirth() const {
    return m_date_of_birth;
}
void ER__people_get_200_response_inner::setDateOfBirth(const QDate &date_of_birth) {
    m_date_of_birth = date_of_birth;
    m_date_of_birth_isSet = true;
}

bool ER__people_get_200_response_inner::is_date_of_birth_Set() const{
    return m_date_of_birth_isSet;
}

bool ER__people_get_200_response_inner::is_date_of_birth_Valid() const{
    return m_date_of_birth_isValid;
}

bool ER__people_get_200_response_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_first_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_of_birth_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool ER__people_get_200_response_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace er
